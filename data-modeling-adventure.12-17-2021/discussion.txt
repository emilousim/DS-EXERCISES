What is normalization and what does it do? 
    Normalization breaks existing tables into multiple different smaller, more precise tables and links the info held within together through a key/related data. This process helps to minimize data redundancy and helps whoever's working with the data read it more easily. Normalization also helps to make adding, deleting, and updating data much simpler and less repetitive. 
What are the differences between 1NF, 2NF, and 3NF? 
    1st Normal Form: First normal form requires all rows to be unique, you can't have different rows with identical values. Each cell in the row must only contain a single value, not a list. Each value in the row must be in its simplest form and cannot be split down any further
    2nd Normal Form: For the data to be in second normal form, it must first meet all of the qualifications of first form. It also cannot have any partial dependencies, meaning the data should be sorted into tables to make all of the datasets as precise and relevant to each other as they can be.
    3rd Normal Form: For data to be in third normal form, the database must meet all requirements necessary for first and second normal form. Additionally, for it to be in 3NF, there can be no transitive dependencies. This means that all fields can only be determinable by the primary keys, not by other keys. If you have a table, you need to be able to access all info in that table through the primary key, and the value shouldn't require a relationship between two non-primary keys to be known. If they are, you solve this by splitting the table into another table that's more precise and makes all values accessible. 